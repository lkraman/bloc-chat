{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\src\\\\components\\\\MessageList.js\";\nimport React, { Component } from 'react';\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageList, _Component);\n\n  function MessageList(props) {\n    var _this;\n\n    _classCallCheck(this, MessageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageList).call(this, props));\n    _this.state = {\n      content: \"\",\n      roomId: \"\",\n      sentAt: \"\",\n      username: \"\",\n      messages: [],\n      newMessage: ''\n    };\n    _this.messagesRef = _this.props.firebase.database().ref(\"messages\");\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createMessage = _this.createMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MessageList, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      e.preventDefault();\n      this.setState({\n        username: \"user\",\n        content: e.target.value,\n        sentAt: this.props.firebase.database.ServerValue.TIMESTAMP,\n        roomId: this.props.activeRoom\n      });\n    }\n  }, {\n    key: \"createMessage\",\n    value: function createMessage(e) {\n      e.preventDefault();\n      var newText = this.state.newMessage;\n      this.messagesRef.push({\n        content: newText,\n        username: this.props.currentUser.displayName,\n        roomId: this.props.activeRoom,\n        sentAt: this.props.firebase.database.ServerValue.TIMESTAMP\n      });\n      this.setState({\n        newMessage: \"\"\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.messagesRef.on('child_added', function (snapshot) {\n        var message = snapshot.val();\n        message.key = snapshot.key;\n\n        _this2.setState({\n          messages: _this2.state.messages.concat(message)\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var activeRoom = this.props.activeRoom;\n      var messageBar = React.createElement(\"form\", {\n        onSubmit: this.createMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.content,\n        placeholder: \"Enter Message\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n      var messageList = this.state.messages.map(function (message) {\n        if (message.roomId === activeRoom) {\n          return React.createElement(\"li\", {\n            key: message.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, message.content);\n        }\n\n        return null;\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, messageBar), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, messageList));\n    }\n  }]);\n\n  return MessageList;\n}(Component);\n\nexport default MessageList;","map":{"version":3,"sources":["C:\\Users\\lkram\\Documents\\Bloc\\GitHub\\bloc\\bloc-chat\\src\\components\\MessageList.js"],"names":["React","Component","MessageList","props","state","content","roomId","sentAt","username","messages","newMessage","messagesRef","firebase","database","ref","handleChange","bind","createMessage","e","preventDefault","setState","target","value","ServerValue","TIMESTAMP","activeRoom","newText","push","currentUser","displayName","on","snapshot","message","val","key","concat","messageBar","messageList","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass MessageList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = { content: \"\", roomId: \"\", sentAt: \"\", username: \"\", messages: [], newMessage: ''}\r\n      \r\n      this.messagesRef = this.props.firebase.database().ref(\"messages\");\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.createMessage = this.createMessage.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      username: \"user\",\r\n      content: e.target.value,\r\n      sentAt: this.props.firebase.database.ServerValue.TIMESTAMP,\r\n      roomId: this.props.activeRoom\r\n    });\r\n  }\r\n\r\n  createMessage(e){\r\n   e.preventDefault();\r\n   const newText = this.state.newMessage;\r\n   this.messagesRef.push({ content: newText, username: this.props.currentUser.displayName, roomId: this.props.activeRoom, sentAt: this.props.firebase.database.ServerValue.TIMESTAMP });\r\n   this.setState({ newMessage: \"\"});\r\n}\r\n\r\n  componentDidMount() {\r\n    this.messagesRef.on('child_added', snapshot => {\r\n      const message = snapshot.val();\r\n      message.key = snapshot.key;\r\n      this.setState({ messages: this.state.messages.concat(message) })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const activeRoom = this.props.activeRoom;\r\n\r\n    const messageBar = (\r\n      <form onSubmit={this.createMessage}>\r\n        <input type=\"text\" value={this.state.content} placeholder=\"Enter Message\" onChange={this.handleChange}/>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n\r\n    const messageList = (\r\n      this.state.messages.map((message) => {\r\n        if (message.roomId === activeRoom) {\r\n          return <li key={message.key}>{message.content}</li>\r\n        }\r\n        return null;\r\n      })\r\n    );\r\n\r\n    return(\r\n      <div>\r\n        <div>{messageBar}</div>\r\n        <ul>{messageList}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MessageList;\r\n"]},"metadata":{},"sourceType":"module"}