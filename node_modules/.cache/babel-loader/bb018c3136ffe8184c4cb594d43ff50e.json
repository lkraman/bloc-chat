{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport RoomList from './components/RoomList';\nimport MessageList from './components/MessageList';\nimport * as firebase from 'firebase';\nvar config = {\n  apiKey: \"AIzaSyAfTbKtXZUD0PZzJxGECO3unfiv10ZqX0w\",\n  authDomain: \"bloc-chat-kraman.firebaseapp.com\",\n  databaseURL: \"https://bloc-chat-kraman.firebaseio.com\",\n  projectId: \"bloc-chat-kraman\",\n  storageBucket: \"bloc-chat-kraman.appspot.com\",\n  messagingSenderId: \"596845905245\"\n};\nfirebase.initializeApp(config);\nexport var provider = new firebase.auth.GoogleAuthProvider();\nexport var auth = firebase.auth();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      activeRoom: \"\"\n    };\n    _this.activeRoom = _this.activeRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"activeRoom\",\n    value: function activeRoom(room) {\n      this.setState({\n        activeRoom: room\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var showMessages = this.state.activeRoom;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.state.activeRoom.title || \"Select A Room\"), React.createElement(RoomList, {\n        firebase: firebase,\n        activeRoom: this.activeRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), showMessages ? React.createElement(MessageList, {\n        firebase: firebase,\n        activeRoom: this.state.activeRoom.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\lkram\\Documents\\Bloc\\GitHub\\bloc\\bloc-chat\\bloc-chat\\src\\App.js"],"names":["React","Component","RoomList","MessageList","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","provider","auth","GoogleAuthProvider","App","props","state","activeRoom","bind","room","setState","showMessages","title","key"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,kCAFD;AAGXC,EAAAA,WAAW,EAAE,yCAHF;AAIXC,EAAAA,SAAS,EAAE,kBAJA;AAKXC,EAAAA,aAAa,EAAE,8BALJ;AAMXC,EAAAA,iBAAiB,EAAE;AANR,CAAb;AAQAP,QAAQ,CAACQ,aAAT,CAAuBP,MAAvB;AACA,OAAO,IAAMQ,QAAQ,GAAG,IAAIT,QAAQ,CAACU,IAAT,CAAcC,kBAAlB,EAAjB;AACP,OAAO,IAAMD,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;;IAEDE,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AACA,UAAKA,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAHiB;AAIlB;;;;+BAEQC,I,EAAM;AACf,WAAKC,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAEE;AAAd,OAAd;AACD;;;6BAEU;AACP,UAAME,YAAY,GAAG,KAAKL,KAAL,CAAWC,UAAhC;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWC,UAAX,CAAsBK,KAAtB,IAA+B,eAApC,CADF,EAEE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEpB,QAApB;AAA8B,QAAA,UAAU,EAAE,KAAKe,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGII,YAAY,GACb,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAEnB,QAAvB;AAAiC,QAAA,UAAU,EAAE,KAAKc,KAAL,CAAWC,UAAX,CAAsBM,GAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADa,GAEX,IALL,CADF;AAWD;;;;EAxBexB,S;;AA2BjB,eAAee,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport RoomList from './components/RoomList';\r\nimport MessageList from './components/MessageList';\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nvar config = {\r\n  apiKey: \"AIzaSyAfTbKtXZUD0PZzJxGECO3unfiv10ZqX0w\",\r\n  authDomain: \"bloc-chat-kraman.firebaseapp.com\",\r\n  databaseURL: \"https://bloc-chat-kraman.firebaseio.com\",\r\n  projectId: \"bloc-chat-kraman\",\r\n  storageBucket: \"bloc-chat-kraman.appspot.com\",\r\n  messagingSenderId: \"596845905245\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {activeRoom: \"\"};\r\n    this.activeRoom = this.activeRoom.bind(this);\r\n  }\r\n\r\nactiveRoom(room) {\r\n  this.setState({ activeRoom: room })\r\n}\r\n\r\n  render() {\r\n    const showMessages = this.state.activeRoom;\r\n    return (\r\n      <div>\r\n        <h1>{this.state.activeRoom.title || \"Select A Room\"}</h1>\r\n        <RoomList firebase={firebase} activeRoom={this.activeRoom} />\r\n        { showMessages ?\r\n        (<MessageList firebase={firebase} activeRoom={this.state.activeRoom.key}/>)\r\n        : (null)\r\n        }\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n export default App;\r\n"]},"metadata":{},"sourceType":"module"}