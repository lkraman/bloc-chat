{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\src\\\\components\\\\MessageList.js\";\nimport React, { Component } from 'react';\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageList, _Component);\n\n  function MessageList(props) {\n    var _this;\n\n    _classCallCheck(this, MessageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageList).call(this, props));\n    _this.state = {\n      messages: [],\n      newMessage: '',\n      roomId: '',\n      user: '',\n      sendAt: ''\n    };\n    _this.messageRef = _this.props.firebase.database().ref('messages');\n    return _this;\n  }\n\n  _createClass(MessageList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.messageRef.on('child_added', function (snapshot) {\n        var msg = snapshot.val();\n        msg.key = snapshot.key;\n\n        _this2.setState({\n          messages: _this2.state.messages.concat(msg)\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        newMessage: e.target.value,\n        roomId: this.props.activeRoom.key,\n        user: \"user\"\n      });\n    }\n  }, {\n    key: \"handleCreateMessage\",\n    value: function handleCreateMessage(e) {\n      this.messagesRef.push({\n        message: this.state.newMessage,\n        roomId: this.state.roomId,\n        sendAt: this.props.firebase.database.ServerValue.TIMESTAMP,\n        user: this.state.user\n      });\n      e.preventDefault();\n      this.setState({\n        newMessage: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"section\", {\n        className: \"message-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.messages.filter(function (messages) {\n        return messages.roomId === _this3.props.activeRoomId;\n      }).map(function (messages) {\n        return React.createElement(\"div\", {\n          className: \"message-subsection\",\n          key: messages.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, messages.username), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, messages.content), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, messages.sentAt));\n      }));\n    }\n  }]);\n\n  return MessageList;\n}(Component);\n\nexport default MessageList;","map":{"version":3,"sources":["C:\\Users\\lkram\\Documents\\Bloc\\GitHub\\bloc\\bloc-chat\\bloc-chat\\src\\components\\MessageList.js"],"names":["React","Component","MessageList","props","state","messages","newMessage","roomId","user","sendAt","messageRef","firebase","database","ref","on","snapshot","msg","val","key","setState","concat","e","target","value","activeRoom","messagesRef","push","message","ServerValue","TIMESTAMP","preventDefault","filter","activeRoomId","map","username","content","sentAt"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,MAAM,EAAE;AALG,KAAb;AAOA,UAAKC,UAAL,GAAkB,MAAKP,KAAL,CAAWQ,QAAX,CAAoBC,QAApB,GAA+BC,GAA/B,CAAmC,UAAnC,CAAlB;AAViB;AAWlB;;;;wCAEmB;AAAA;;AAClB,WAAKH,UAAL,CAAgBI,EAAhB,CAAmB,aAAnB,EAAkC,UAAAC,QAAQ,EAAI;AAC5C,YAAMC,GAAG,GAAGD,QAAQ,CAACE,GAAT,EAAZ;AACAD,QAAAA,GAAG,CAACE,GAAJ,GAAUH,QAAQ,CAACG,GAAnB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAACd,UAAAA,QAAQ,EAAE,MAAI,CAACD,KAAL,CAAWC,QAAX,CAAoBe,MAApB,CAA2BJ,GAA3B;AAAX,SAAd;AACD,OAJD;AAKD;;;iCAEYK,C,EAAG;AACX,WAAKF,QAAL,CAAc;AACVb,QAAAA,UAAU,EAAEe,CAAC,CAACC,MAAF,CAASC,KADX;AAEVhB,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWqB,UAAX,CAAsBN,GAFpB;AAGVV,QAAAA,IAAI,EAAE;AAHI,OAAd;AAKF;;;wCAEiBa,C,EAAG;AACpB,WAAKI,WAAL,CAAiBC,IAAjB,CAAsB;AAClBC,QAAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWE,UADF;AAElBC,QAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MAFD;AAGlBE,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWQ,QAAX,CAAoBC,QAApB,CAA6BgB,WAA7B,CAAyCC,SAH/B;AAIlBrB,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI;AAJC,OAAtB;AAMAa,MAAAA,CAAC,CAACS,cAAF;AACA,WAAKX,QAAL,CAAc;AAACb,QAAAA,UAAU,EAAE;AAAb,OAAd;AACH;;;6BAES;AAAA;;AACP,aACE;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,QAAX,CACE0B,MADF,CACS,UAAA1B,QAAQ;AAAA,eAAIA,QAAQ,CAACE,MAAT,KAAoB,MAAI,CAACJ,KAAL,CAAW6B,YAAnC;AAAA,OADjB,EAEEC,GAFF,CAEM,UAAA5B,QAAQ;AAAA,eACX;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAoC,UAAA,GAAG,EAAEA,QAAQ,CAACa,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMb,QAAQ,CAAC6B,QAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM7B,QAAQ,CAAC8B,OAAf,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM9B,QAAQ,CAAC+B,MAAf,CAHF,CADW;AAAA,OAFd,CADH,CADF;AAeD;;;;EAzDuBnC,S;;AA4D1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass MessageList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      messages: [],\r\n      newMessage: '',\r\n      roomId: '',\r\n      user: '',\r\n      sendAt: ''\r\n    };\r\n    this.messageRef = this.props.firebase.database().ref('messages');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.messageRef.on('child_added', snapshot => {\r\n      const msg = snapshot.val();\r\n      msg.key = snapshot.key;\r\n      this.setState({messages: this.state.messages.concat(msg)});\r\n    });\r\n  }\r\n\r\n  handleChange(e) {\r\n       this.setState({\r\n           newMessage: e.target.value,\r\n           roomId: this.props.activeRoom.key,\r\n           user: \"user\",\r\n       });\r\n    }\r\n\r\n  handleCreateMessage(e) {\r\n     this.messagesRef.push({\r\n         message: this.state.newMessage,\r\n         roomId: this.state.roomId,\r\n         sendAt: this.props.firebase.database.ServerValue.TIMESTAMP,\r\n         user: this.state.user\r\n     })\r\n     e.preventDefault();\r\n     this.setState({newMessage: ''});\r\n }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"message-list\">\r\n        {this.state.messages\r\n          .filter(messages => messages.roomId === this.props.activeRoomId)\r\n          .map(messages => (\r\n            <div className=\"message-subsection\" key={messages.key}>\r\n              <div>{messages.username}</div>\r\n              <div>{messages.content}</div>\r\n              <div>{messages.sentAt}</div>\r\n            </div>\r\n\r\n          ))}\r\n\r\n          </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageList;\r\n"]},"metadata":{},"sourceType":"module"}