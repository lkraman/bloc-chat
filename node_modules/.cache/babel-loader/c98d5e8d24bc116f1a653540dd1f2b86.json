{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\src\\\\components\\\\User.js\";\nimport React, { Component } from 'react';\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n    _this.state = {\n      user: null\n    };\n    _this.signIn = _this.signIn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.signOut = _this.signOut.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.setState({\n            user: user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"signIn\",\n    value: function signIn() {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken; // The signed-in user info.\n\n        var user = result.user; // ...\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message; // The email of the user's account used.\n\n        var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n        var credential = error.credential; // ...\n      });\n      firebase.auth().getRedirectResult().then(function (result) {\n        if (result.credential) {\n          // This gives you a Google Access Token. You can use it to access the Google API.\n          var token = result.credential.accessToken; // ...\n        } // The signed-in user info.\n\n\n        var user = result.user;\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message; // The email of the user's account used.\n\n        var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n        var credential = error.credential; // ...\n      });\n      firebase.auth().signOut().then(function () {// Sign-out successful.\n      }).catch(function (error) {// An error happened.\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.signIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(\"button\", {\n        onClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Sign Out\"), React.createElement(\"section\", {\n        className: \"show-username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Sign In As:\", this.props.user ? this.props.user.displayName : 'Guest'));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["C:\\Users\\lkram\\Documents\\Bloc\\GitHub\\bloc\\bloc-chat\\bloc-chat\\src\\components\\User.js"],"names":["React","Component","User","props","state","user","signIn","bind","signOut","firebase","auth","onAuthStateChanged","setState","provider","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","catch","error","errorCode","code","errorMessage","message","email","getRedirectResult","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n\r\n\r\nclass User extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = ({\r\n      user: null,\r\n    });\r\n    this.signIn = this.signIn.bind(this)\r\n    this.signOut = this.signOut.bind(this)\r\n\r\n  }\r\n\r\n\r\n    componentDidMount() {\r\n      this.props.firebase.auth().onAuthStateChanged(user => {\r\n        if (user) {\r\n          this.setState({user})\r\n        }\r\n      })\r\n  }\r\n\r\n  signIn() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithPopup(provider).then(function(result) {\r\n  // This gives you a Google Access Token. You can use it to access the Google API.\r\n  const token = result.credential.accessToken;\r\n  // The signed-in user info.\r\n  const user = result.user;\r\n  // ...\r\n}).catch(function(error) {\r\n  // Handle Errors here.\r\n  const errorCode = error.code;\r\n  const errorMessage = error.message;\r\n  // The email of the user's account used.\r\n  const email = error.email;\r\n  // The firebase.auth.AuthCredential type that was used.\r\n  const credential = error.credential;\r\n  // ...\r\n});\r\n\r\nfirebase.auth().getRedirectResult().then(function(result) {\r\n  if (result.credential) {\r\n    // This gives you a Google Access Token. You can use it to access the Google API.\r\n    const token = result.credential.accessToken;\r\n    // ...\r\n  }\r\n  // The signed-in user info.\r\n  const user = result.user;\r\n}).catch(function(error) {\r\n  // Handle Errors here.\r\n  const errorCode = error.code;\r\n  const errorMessage = error.message;\r\n  // The email of the user's account used.\r\n  const email = error.email;\r\n  // The firebase.auth.AuthCredential type that was used.\r\n  const credential = error.credential;\r\n  // ...\r\n});\r\n\r\nfirebase.auth().signOut().then(function() {\r\n  // Sign-out successful.\r\n}).catch(function(error) {\r\n  // An error happened.\r\n});\r\n}\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n         <button onClick={this.signIn}>Sign In</button>\r\n         <button onClick={this.signOut}>Sign Out</button>\r\n         <section className=\"show-username\">\r\n            Sign In As:\r\n            {this.props.user ? this.props.user.displayName : 'Guest'}\r\n          </section>\r\n       </div>\r\n\r\n  )\r\n}\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}