{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\src\\\\components\\\\MessageList.js\";\nimport React, { Component } from 'react';\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageList, _Component);\n\n  function MessageList(props) {\n    var _this;\n\n    _classCallCheck(this, MessageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageList).call(this, props));\n    _this.state = {\n      messages: [],\n      roomId: '',\n      newMessage: '',\n      user: '',\n      sendAt: ''\n    };\n    _this.messagesRef = _this.props.firebase.database().ref('messages');\n    return _this;\n  }\n\n  _createClass(MessageList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.messagesRef.on('child_added', function (snapshot) {\n        var message = snapshot.val();\n        message.key = snapshot.key;\n\n        _this2.setState({\n          messages: _this2.state.messages.concat(message)\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        newMessage: event.target.value,\n        roomId: this.props.activeRoom.key,\n        user: \"user\"\n      });\n    }\n  }, {\n    key: \"createMessage\",\n    value: function createMessage(e) {\n      this.messagesRef.push({\n        message: this.state.newMessage,\n        roomId: this.state.roomId,\n        sendAt: this.props.firebase.database.ServerValue.TIMESTAMP,\n        user: this.state.user\n      });\n      e.preventDefault();\n      this.setState({\n        newMessage: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"section\", {\n        className: \"activeRoom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.activeRoom), React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this3.createMessage(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Create New Message:\"), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newMessage,\n        onChange: function onChange(e) {\n          return _this3.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Submit\")), this.state.message.map(function (message) {\n        if (message.roomId === _this3.props.activeRoom.key) {\n          return React.createElement(\"span\", {\n            key: message.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, message.message);\n        }\n\n        return null;\n      }));\n    }\n  }]);\n\n  return MessageList;\n}(Component);\n\nexport default MessageList;","map":{"version":3,"sources":["C:\\Users\\lkram\\Documents\\Bloc\\GitHub\\bloc\\bloc-chat\\bloc-chat\\src\\components\\MessageList.js"],"names":["React","Component","MessageList","props","state","messages","roomId","newMessage","user","sendAt","messagesRef","firebase","database","ref","on","snapshot","message","val","key","setState","concat","event","target","value","activeRoom","e","push","ServerValue","TIMESTAMP","preventDefault","createMessage","handleChange","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass MessageList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      roomId: '',\r\n      newMessage: '',\r\n      user: '',\r\n      sendAt: ''\r\n    }\r\n\r\n    this.messagesRef = this.props.firebase.database().ref('messages');\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.messagesRef.on('child_added', snapshot => {\r\n      const message = snapshot.val();\r\n      message.key = snapshot.key;\r\n      this.setState({ messages: this.state.messages.concat( message ) })\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n        newMessage: event.target.value,\r\n        roomId: this.props.activeRoom.key,\r\n        user: \"user\",\r\n    });\r\n }\r\n\r\n   createMessage(e) {\r\n    this.messagesRef.push({\r\n         message: this.state.newMessage,\r\n         roomId: this.state.roomId,\r\n         sendAt: this.props.firebase.database.ServerValue.TIMESTAMP,\r\n         user: this.state.user\r\n     })\r\n     e.preventDefault();\r\n     this.setState({newMessage: ''});\r\n }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"activeRoom\">\r\n      <div>\r\n       {this.props.activeRoom}\r\n       </div>\r\n       <form onSubmit={(e) => this.createMessage(e)}>\r\n            <div>Create New Message:</div>\r\n            <input type=\"text\" value={this.state.newMessage} onChange={ e => this.handleChange(e) }/>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n\r\n        { this.state.message.map( message =>\r\n              {if (message.roomId === this.props.activeRoom.key) {\r\n                  return <span key={message.key}>{message.message}</span>\r\n              }\r\n                  return null;}\r\n              )}\r\n\r\n        </section>\r\n        );\r\n      }\r\n    }\r\n\r\nexport default MessageList;\r\n"]},"metadata":{},"sourceType":"module"}