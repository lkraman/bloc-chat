{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lkram\\\\Documents\\\\Bloc\\\\GitHub\\\\bloc\\\\bloc-chat\\\\bloc-chat\\\\src\\\\components\\\\MessageList.js\";\nimport React, { Component } from 'react';\n\nvar MessageList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageList, _Component);\n\n  function MessageList(props) {\n    var _this;\n\n    _classCallCheck(this, MessageList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageList).call(this, props));\n    _this.state = {\n      messages: []\n    };\n    _this.messageRef = _this.props.firebase.database().ref('messages');\n    return _this;\n  }\n\n  _createClass(MessageList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.messageRef.on('child_added', function (snapshot) {\n        var message = snapshot.val();\n        message.key = snapshot.key;\n\n        _this2.setState({\n          messages: _this2.state.messages.concat(message)\n        });\n      });\n    }\n  }, {\n    key: \"createMessage\",\n    value: function createMessage(e) {\n      var newMessageName = this.state.newMessageName;\n      e.preventDefault();\n      this.messagesRef.push({\n        name: newMessageName\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        newMessageName: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.state.messages.map(function (message, index) {\n        return React.createElement(\"p\", {\n          className: \"messages\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \" \", message.name);\n      }, console.log(this.state.messages)), React.createElement(\"form\", {\n        className: \"message-form\",\n        onSubmit: function onSubmit(e) {\n          return _this3.createMessage(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"New Message Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.newMessageName,\n        onChange: function onChange(e) {\n          return _this3.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MessageList;\n}(Component);\n\nexport default MessageList;","map":{"version":3,"sources":["C:\\Users\\lkram\\Documents\\Bloc\\GitHub\\bloc\\bloc-chat\\bloc-chat\\src\\components\\MessageList.js"],"names":["React","Component","MessageList","props","state","messages","messageRef","firebase","database","ref","on","snapshot","message","val","key","setState","concat","e","newMessageName","preventDefault","messagesRef","push","name","target","value","map","index","console","log","createMessage","handleChange"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAEA,UAAKC,UAAL,GAAkB,MAAKH,KAAL,CAAWI,QAAX,CAAoBC,QAApB,GAA+BC,GAA/B,CAAmC,UAAnC,CAAlB;AAJiB;AAKlB;;;;wCAEkB;AAAA;;AACjB,WAAKH,UAAL,CAAgBI,EAAhB,CAAmB,aAAnB,EAAkC,UAAAC,QAAQ,EAAI;AAC5C,YAAMC,OAAO,GAAGD,QAAQ,CAACE,GAAT,EAAhB;AACAD,QAAAA,OAAO,CAACE,GAAR,GAAcH,QAAQ,CAACG,GAAvB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEV,UAAAA,QAAQ,EAAE,MAAI,CAACD,KAAL,CAAWC,QAAX,CAAoBW,MAApB,CAA4BJ,OAA5B;AAAZ,SAAd;AACD,OAJD;AAKD;;;kCAEaK,C,EAAE;AAChB,UAAMC,cAAc,GAAG,KAAKd,KAAL,CAAWc,cAAlC;AACAD,MAAAA,CAAC,CAACE,cAAF;AACA,WAAKC,WAAL,CAAiBC,IAAjB,CAAsB;AACpBC,QAAAA,IAAI,EAAEJ;AADc,OAAtB;AAGD;;;iCAEYD,C,EAAE;AACb,WAAKF,QAAL,CAAc;AAAEG,QAAAA,cAAc,EAAED,CAAC,CAACM,MAAF,CAASC;AAA3B,OAAd;AACD;;;6BAEU;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,KAAKpB,KAAL,CAAWC,QAAX,CAAoBoB,GAApB,CAAyB,UAACb,OAAD,EAAUc,KAAV;AAAA,eACzB;AAAG,UAAA,SAAS,EAAC,UAAb;AAAwB,UAAA,GAAG,EAAEA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAuCd,OAAO,CAACU,IAA/C,CADyB;AAAA,OAAzB,EAEAK,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAL,CAAWC,QAAvB,CAFA,CAFF,EAQA;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,QAAQ,EAAE,kBAACY,CAAD;AAAA,iBAAO,MAAI,CAACY,aAAL,CAAmBZ,CAAnB,CAAP;AAAA,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWc,cAArC;AAAqD,QAAA,QAAQ,EAAG,kBAAAD,CAAC;AAAA,iBAAI,MAAI,CAACa,YAAL,CAAkBb,CAAlB,CAAJ;AAAA,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADJ,EAKI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CARA,CADF;AAkBD;;;;EA/CuBhB,S;;AAkD1B,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass MessageList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { messages: [] };\r\n\r\n    this.messageRef = this.props.firebase.database().ref('messages');\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.messageRef.on('child_added', snapshot => {\r\n      const message = snapshot.val();\r\n      message.key = snapshot.key;\r\n      this.setState({ messages: this.state.messages.concat( message ) })\r\n    });\r\n  }\r\n\r\n  createMessage(e){\r\n  const newMessageName = this.state.newMessageName;\r\n  e.preventDefault()\r\n  this.messagesRef.push({\r\n    name: newMessageName\r\n  });\r\n}\r\n\r\nhandleChange(e){\r\n  this.setState({ newMessageName: e.target.value });\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n      {\r\n        this.state.messages.map( (message, index) =>\r\n        <p className=\"messages\" key={index} > {message.name}</p>,\r\n        console.log(this.state.messages)\r\n        )\r\n      }\r\n\r\n      <form className=\"message-form\" onSubmit={(e) => this.createMessage(e)}>\r\n          <label>\r\n            New Message Name:\r\n            <input type=\"text\" value={this.state.newMessageName} onChange={ e => this.handleChange(e) }/>\r\n          </label>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageList;\r\n"]},"metadata":{},"sourceType":"module"}